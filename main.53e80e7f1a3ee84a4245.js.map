{"version":3,"sources":["webpack:///./js/hw11part3.js","webpack:///./index.js"],"names":["pad","value","String","padStart","constructor","selector","targetDate","this","refs","days","document","querySelector","hours","mins","secs","timerFace","renderTimer","setInterval","currentTime","Date","now","deltaTime","updateClockface","getTimeComponents","innerHTML","time","Math","floor"],"mappings":"4EA0CA,SAASA,EAAIC,GACX,OAAOC,OAAOD,GAAOE,SAAS,EAAG,KAGrB,IA9Cd,MACEC,aAAY,SAAEC,EAAF,WAAYC,IACtBC,KAAKF,SAAWA,EAChBE,KAAKD,WAAaA,EAClBC,KAAKC,KAAO,CACVC,KAAMC,SAASC,cAAiBN,EAAF,wBAC9BO,MAAOF,SAASC,cAAiBN,EAAF,yBAC/BQ,KAAMH,SAASC,cAAiBN,EAAF,wBAC9BS,KAAMJ,SAASC,cAAiBN,EAAF,wBAC9BU,UAAWL,SAASC,cAAc,aAItCK,cACEC,YAAY,KACV,MAAMC,EAAcC,KAAKC,MACnBC,EAAYd,KAAKD,WAAaY,EACpCX,KAAKe,gBAAgBf,KAAKgB,kBAAkBF,KAC3C,KAGLC,iBAAgB,KAAEb,EAAF,MAAQG,EAAR,KAAeC,EAAf,KAAqBC,IACnCP,KAAKC,KAAKC,KAAKe,UAAYf,EAC3BF,KAAKC,KAAKI,MAAMY,UAAYZ,EAC5BL,KAAKC,KAAKK,KAAKW,UAAYX,EAC3BN,KAAKC,KAAKM,KAAKU,UAAYV,EAG7BS,kBAAkBE,GAUhB,MAAO,CAAEhB,KATIT,EAAI0B,KAAKC,MAAMF,EAAO,QASpBb,MAPDZ,EACZ0B,KAAKC,MAAOF,EAAO,MAAR,OAMSZ,KAJTb,EAAI0B,KAAKC,MAAOF,EAAO,KAAR,MAIAX,KAFfd,EAAI0B,KAAKC,MAAOF,EAAO,IAAe,SAUtB,CAC/BpB,SAAU,WACVC,WAAY,IAAIa,KAAK,iBAGjBH,e,yDCnDN,6B","file":"main.53e80e7f1a3ee84a4245.js","sourcesContent":["class CountdownTimer {\r\n  constructor({ selector, targetDate }) {\r\n    this.selector = selector;\r\n    this.targetDate = targetDate;\r\n    this.refs = {\r\n      days: document.querySelector(`${selector} [data-value=\"days\"]`),\r\n      hours: document.querySelector(`${selector} [data-value=\"hours\"]`),\r\n      mins: document.querySelector(`${selector} [data-value=\"mins\"]`),\r\n      secs: document.querySelector(`${selector} [data-value=\"secs\"]`),\r\n      timerFace: document.querySelector('#timer-1'),\r\n    };\r\n  }\r\n\r\n  renderTimer() {\r\n    setInterval(() => {\r\n      const currentTime = Date.now();\r\n      const deltaTime = this.targetDate - currentTime;\r\n      this.updateClockface(this.getTimeComponents(deltaTime));\r\n    }, 1000);\r\n  }\r\n\r\n  updateClockface({ days, hours, mins, secs }) {\r\n    this.refs.days.innerHTML = days;\r\n    this.refs.hours.innerHTML = hours;\r\n    this.refs.mins.innerHTML = mins;\r\n    this.refs.secs.innerHTML = secs;\r\n  }\r\n\r\n  getTimeComponents(time) {\r\n    const days = pad(Math.floor(time / (1000 * 60 * 60 * 24)));\r\n\r\n    const hours = pad(\r\n      Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)),\r\n    );\r\n    const mins = pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\r\n\r\n    const secs = pad(Math.floor((time % (1000 * 60)) / 1000));\r\n\r\n    return { days, hours, mins, secs };\r\n  }\r\n}\r\n\r\nfunction pad(value) {\r\n  return String(value).padStart(2, '0');\r\n}\r\n\r\nconst timer = new CountdownTimer({\r\n  selector: '#timer-1',\r\n  targetDate: new Date('Jan 1, 2021'),\r\n});\r\n\r\ntimer.renderTimer();\r\n","import './styles.css';\r\nimport './js/hw11part3';\r\n"],"sourceRoot":""}